@using Domain
@using Interface.Data
@using Logic
@inject SessionLogic sessionService
@inject UserLogic userLogic
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid" id="first-row">
        <a class="navbar-brand" href="">Panel Task</a><i @onclick="ShowNotifications" class=@(classNotification)></i>
        <NotificationModal @ref="notificationModal" UpdateNotificationIcon="UpdateNotificationIcon" />
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>
    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <i class="oi fa-solid fa-house"></i> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Teams">
                    <i class="oi fa-solid fa-people-group"></i> Teams
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Panels">
                    <i class="oi fa-solid fa-chalkboard" aria-hidden="true"></i> Panels
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="OutdatedTasks">
                    <i class="oi fa-solid fa-calendar-xmark"></i> Outdated Tasks
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Epics">
                    <i class="oi fa-solid fa-wand-magic-sparkles"></i> Epics
                </NavLink>
            </div>
            @if (sessionService.IsUserActive() && sessionService.GetCurrentUser().Type.Equals(TypeUser.Admin))
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="AddUser">
                        <i class="oi fa-solid fa-user-plus"></i> Add User
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="ListUsers">
                        <i class="oi fa-solid fa-user-pen"></i> Modify User
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="RemoveUser">
                        <i class="oi fa-solid fa-user-xmark"></i> Remove User
                    </NavLink>
                </div>
            }
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="ImportTask">
                    <i class="oi fa-solid fa-file-arrow-up"></i> Import Tasks
                </NavLink>
            </div>
            <div class="button-container">
                <button @onclick="Profile" class="icon-button">
                    <i class="fas fa-user"></i>
                </button>
            </div>
            <div class="button-container">
                <button @onclick="Trashpaper" class="icon-button">
                    <i class="fa-solid fa-trash"></i>
                </button>
            </div>
            <div class="button-container">
                <button @onclick="LogOut" class="icon-button">
                    <i class="fas fa-door-open"></i>
                </button>
            </div>
        </nav>
    </div>



@code {
    private bool collapseNavMenu = true;
    private NotificationModal notificationModal;
    private string classNotification;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        UpdateNotificationIcon();
    }

    public void UpdateNotificationIcon()
    {
        User currentUser = sessionService.GetCurrentUser();
        List<Notification> notifications = userLogic.GetNotifications(currentUser);
        if (notifications.Count > 0)
        {
            classNotification = "noti oi fa-solid fa-bell";
        }
        else
        {
            classNotification = "noti oi fa-solid fa-bell-slash";
        }

        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void LogOut()
    {
        sessionService.LogOut();
        NavigationManager.NavigateTo("/", true);
    }

    private void Profile()
    {
        NavigationManager.NavigateTo("/Profile");
    }

    private void Trashpaper()
    {
        NavigationManager.NavigateTo("/Trashpaper");
    }

    private void ShowNotifications()
    {
        notificationModal.ShowModal();
    }

}